/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as HomeImport } from "./routes/_home";
import { Route as IndexImport } from "./routes/index";
import { Route as HomeScheduleImport } from "./routes/_home/schedule";
import { Route as HomeResultImport } from "./routes/_home/result";
import { Route as HomeDashboardImport } from "./routes/_home/dashboard";

// Create/Update Routes

const HomeRoute = HomeImport.update({
	id: "/_home",
	getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
	id: "/",
	path: "/",
	getParentRoute: () => rootRoute,
} as any);

const HomeScheduleRoute = HomeScheduleImport.update({
	id: "/schedule",
	path: "/schedule",
	getParentRoute: () => HomeRoute,
} as any);

const HomeResultRoute = HomeResultImport.update({
	id: "/result",
	path: "/result",
	getParentRoute: () => HomeRoute,
} as any);

const HomeDashboardRoute = HomeDashboardImport.update({
	id: "/dashboard",
	path: "/dashboard",
	getParentRoute: () => HomeRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
	interface FileRoutesByPath {
		"/": {
			id: "/";
			path: "/";
			fullPath: "/";
			preLoaderRoute: typeof IndexImport;
			parentRoute: typeof rootRoute;
		};
		"/_home": {
			id: "/_home";
			path: "";
			fullPath: "";
			preLoaderRoute: typeof HomeImport;
			parentRoute: typeof rootRoute;
		};
		"/_home/dashboard": {
			id: "/_home/dashboard";
			path: "/dashboard";
			fullPath: "/dashboard";
			preLoaderRoute: typeof HomeDashboardImport;
			parentRoute: typeof HomeImport;
		};
		"/_home/result": {
			id: "/_home/result";
			path: "/result";
			fullPath: "/result";
			preLoaderRoute: typeof HomeResultImport;
			parentRoute: typeof HomeImport;
		};
		"/_home/schedule": {
			id: "/_home/schedule";
			path: "/schedule";
			fullPath: "/schedule";
			preLoaderRoute: typeof HomeScheduleImport;
			parentRoute: typeof HomeImport;
		};
	}
}

// Create and export the route tree

interface HomeRouteChildren {
	HomeDashboardRoute: typeof HomeDashboardRoute;
	HomeResultRoute: typeof HomeResultRoute;
	HomeScheduleRoute: typeof HomeScheduleRoute;
}

const HomeRouteChildren: HomeRouteChildren = {
	HomeDashboardRoute: HomeDashboardRoute,
	HomeResultRoute: HomeResultRoute,
	HomeScheduleRoute: HomeScheduleRoute,
};

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren);

export interface FileRoutesByFullPath {
	"/": typeof IndexRoute;
	"": typeof HomeRouteWithChildren;
	"/dashboard": typeof HomeDashboardRoute;
	"/result": typeof HomeResultRoute;
	"/schedule": typeof HomeScheduleRoute;
}

export interface FileRoutesByTo {
	"/": typeof IndexRoute;
	"": typeof HomeRouteWithChildren;
	"/dashboard": typeof HomeDashboardRoute;
	"/result": typeof HomeResultRoute;
	"/schedule": typeof HomeScheduleRoute;
}

export interface FileRoutesById {
	__root__: typeof rootRoute;
	"/": typeof IndexRoute;
	"/_home": typeof HomeRouteWithChildren;
	"/_home/dashboard": typeof HomeDashboardRoute;
	"/_home/result": typeof HomeResultRoute;
	"/_home/schedule": typeof HomeScheduleRoute;
}

export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath;
	fullPaths: "/" | "" | "/dashboard" | "/result" | "/schedule";
	fileRoutesByTo: FileRoutesByTo;
	to: "/" | "" | "/dashboard" | "/result" | "/schedule";
	id:
		| "__root__"
		| "/"
		| "/_home"
		| "/_home/dashboard"
		| "/_home/result"
		| "/_home/schedule";
	fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
	IndexRoute: typeof IndexRoute;
	HomeRoute: typeof HomeRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
	IndexRoute: IndexRoute,
	HomeRoute: HomeRouteWithChildren,
};

export const routeTree = rootRoute
	._addFileChildren(rootRouteChildren)
	._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_home"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_home": {
      "filePath": "_home.tsx",
      "children": [
        "/_home/dashboard",
        "/_home/result",
        "/_home/schedule"
      ]
    },
    "/_home/dashboard": {
      "filePath": "_home/dashboard.tsx",
      "parent": "/_home"
    },
    "/_home/result": {
      "filePath": "_home/result.tsx",
      "parent": "/_home"
    },
    "/_home/schedule": {
      "filePath": "_home/schedule.tsx",
      "parent": "/_home"
    }
  }
}
ROUTE_MANIFEST_END */
